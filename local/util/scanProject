#!/usr/bin/env python3

import os
import django

os.environ.setdefault( 'DJANGO_SETTINGS_MODULE', 'architect.settings' )
django.setup()

import sys
from pprint import pprint

from django.core.exceptions import ValidationError

from architect.Plan.lib import PlanValidationError, load, compare_to_running, apply_diff

auto_apply = False
try:
  if sys.argv[ 1 ] == '--apply':
    sys.argv.pop( 1 )
    auto_apply = True
except IndexError:
  pass

try:
  project_dir = sys.argv[1]
  include_dirs = sys.argv[2:]
except IndexError:
  print( 'Usage: %s <project dir> [ <include dir 1> <include dir 2> ...]' % sys.argv[0] )
  sys.exit( 1 )

# if project_dir/include_dir is not a dir
# print '"%s" is not a director'
# sys.exit( 1 )

args = {}
args[ 'complex' ] = 'the-complex'

try:
  project = load( project_dir, include_dirs, args )
except ValidationError as e:
  print( 'Error Loading "{0}"'.format( e ) )
  sys.exit( 1 )

pprint( project )

diff = compare_to_running( project )
if diff == []:
  print( 'No Changes' )
  sys.exit( 0 )

pprint( diff )

if not auto_apply:
  print( 'Apply?' )
  if sys.stdin.readline().strip() != 'y':
    print( 'Aborted' )
    sys.exit( 0 )

#start transaction
try:
  apply_diff( diff )
except PlanValidationError as e:
  print( 'Validation Error, apply aborted. Error: "{0}"'.format( e ) )
# if exception, cancel transaction, otherwise commit

sys.exit( 0 )
