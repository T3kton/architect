#!/usr/bin/env python3

import os
import django

os.environ.setdefault( 'DJANGO_SETTINGS_MODULE', 'architect.settings' )
django.setup()

import sys
from pprint import pprint
from datetime import datetime, timedelta, timezone

from architect.lib.loader import loadProject, validateProject, diffStaticPlan
from architect.Plan.models import Site, StaticPlan
from architect.Contractor.models import BluePrint

auto_apply = False
try:
  if sys.argv[1] == '--apply':
    sys.argv.pop( 1 )
    auto_apply = True

except IndexError:
  pass

try:
  project_folder = sys.argv[1]
except IndexError:
  print( 'Usage: {0} <project folder>'.format( sys.argv[0] ) )
  sys.exit( 1 )

master_file = os.path.join( project_folder, 'architect.toml' )

if not os.path.isfile( master_file ):
  print( '"{0}" is not a file or does not exist'.format( master_file ) )
  sys.exit( 1 )

site_list, target = loadProject( project_folder )

validateProject( target )

pprint( target )

for name in site_list:
  print( 'Checking site "{0}"'.format( name ) )
  try:
    if not auto_apply:
      print( 'New site "{0}"'.format( name ) )
      continue

    site = Site.objects.get( name=name )
  except Site.DoesNotExist:
    site = Site( name=name )
    site.full_clean()
    site.save()

  try:
    plan = StaticPlan.objects.get( site=site )
  except StaticPlan.DoesNotExist:
    plan = StaticPlan( site=site, description=target[ name ][ 'description' ] )
    plan.enabled = True
    plan.change_cooldown = 5
    plan.last_change = datetime.now( timezone.utc ) - timedelta( days=1 )

  tmp = diffStaticPlan( plan.plan, target[ name ] )
  pprint( tmp )

  if auto_apply:
    plan.plan = target[ name ]
    plan.full_clean()
    plan.save()

# TODO: Not sure  where to best put this, need to re-think the seperate local name for the blueprints
for blueprint in BluePrint.objects.filter( name__isnull=True ):
  blueprint.name = blueprint.contractor_id
  blueprint.full_clean()
  blueprint.save()
